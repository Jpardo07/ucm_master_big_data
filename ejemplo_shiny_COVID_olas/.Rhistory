expand_limits(x = and.data.frame$long,
y = and.data.frame$lat)
#######################################
# añadimos facetas -separamos por grupo de edad y nivel de formación
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)
#######################################
# cambiamos la escala de color para que más intenso sea más paro
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701")
#######################################
# Quitamos las coordenadas de x e y (longitud y latitud)
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701") +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL)
#######################################
# añadimos título, etiquetas de ejes y leyenda
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701") +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold", size = rel(1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
# Mejoramos el mapa con etiquetas para los niveles
# para dar significado a los colores
# ver la capa "scale_fill_manual"
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = intervalos),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = c("#FDEBDD",
"#F9C9AD",
"#E1885F",
"#D34400"),
labels = c("Menos del 20%",
"[20% - 40%)",
"[40% - 60%)",
"[60% - 80%]")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
# Mapa con tasa de paro con alguna mejora
# - optimización de colores de líneas y fondo
# - incremento de categorías
# - uso de una escala divergente
cols <- brewer.pal(8,"PiYG")
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov, fill = intervalosfinos),
map = and.data.frame,
colour = "cadetblue1") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = rev(cols),
labels = c("<10",
"10-20",
"20-30",
"30-40",
"40-50",
"50-60",
"60-70",
"70-80")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
################
# POR QUÉ ES IMPORTANTE CONSIDERAR LA CEGUERA AL COLOR
# dichromat es una librería que incorpora funciones que cambian las distinciones de color azul-verde a aproximadamente los efectos de las dos formas más comunes de ceguera a color: protanopia y deuteranopia.
# Un ejemplo de heatmap.
library(dichromat)
par(mfcol=c(1, 2))
N <- 20
pie(rep(1, N),
col = heat.colors(N))
# Cómo lo vería una persona con deuteranopia:
pie(rep(1, N),
col = dichromat(heat.colors(N), type = "deutan"))
# Y con protanopia
pie(rep(1, N),
col = dichromat(heat.colors(N), type = "tritan"))
# Veamos la simulación de nuestro último mapa para una persona con deuteranopia
# (y aprovechamos para variar el color de las líneas de separación):
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov, fill = intervalosfinos),
map = and.data.frame,
colour = "yellow") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = dichromat(rev(cols), type = "tritan"),
labels = c("<10",
"10-20",
"20-30",
"30-40",
"40-50",
"50-60",
"60-70",
"70-80")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
# la función fortify -de ggplot2- permite pasar el objeto andalucia
# propio de la librería sp
# a data.frame que ya puede utilizar ggplot2
and.data.frame <- fortify(andalucia)
# Queremos comunidad autónoma Andalucía
andalucia <- espania[espania$NAME_1=="Andalucía",]
# España con provincias (nivel 2 administrativo)
espania <- readRDS(file = "ESP_adm2.rds")
setwd("/home/pedro/Escritorio/UCM_master/ucm_master_big_data")
library(sp)
library(lattice)
library(ggplot2)
library(RColorBrewer)
# Forma básica de España
espania <- readRDS(file = "ESP_adm0.rds")
plot(espania)
# España con comunidades (nivel 1 administrativo)
espania <- readRDS(file = "ESP_adm1.rds")
plot(espania)
# España con provincias (nivel 2 administrativo)
espania <- readRDS(file = "ESP_adm2.rds")
plot(espania)
# Queremos comunidad autónoma Andalucía
andalucia <- espania[espania$NAME_1=="Andalucía",]
plot(andalucia)
# Dibujar un mapa básico con escalas de color
# A partir de los mapas de José Luis Cañadas:
# http://rpubs.com/joscani/mapa_paro_andalucia
# Con cambios en escalas de color a partir de taller de color de grupo R madrid:
# https://github.com/pedroconcejero/taller-color/blob/master/taller_color_def_grupo_madrid.rmd
githubURL1 <- "https://github.com/pedroconcejero/taller-color/blob/master/tasas_paro_andalucia.rda?raw=true"
load(url(githubURL1))
str(tasa.paro.and.provincial)
tasa.paro.and.provincial$gedad <- as.character(tasa.paro.and.provincial$gedad)
table(tasa.paro.and.provincial$gedad)
tasa.paro.and.provincial$gedad[tasa.paro.and.provincial$gedad == "De 16 a 34 a\xf1os"] <- "De 16 a 34 años"
tasa.paro.and.provincial$gedad[tasa.paro.and.provincial$gedad == "De 35 a 54 a\xf1os"] <- "De 35 a 54 años"
tasa.paro.and.provincial$gedad[tasa.paro.and.provincial$gedad == "Mayor de 55 a\xf1os"] <- "Mayor de 55 años"
table(tasa.paro.and.provincial$gedad)
tasa.paro.and.provincial$prov <- droplevels(tasa.paro.and.provincial$prov)
levels(tasa.paro.and.provincial$prov)
levels(tasa.paro.and.provincial$prov)[1] <- "Almería"
levels(tasa.paro.and.provincial$prov)[2] <- "Cádiz"
levels(tasa.paro.and.provincial$prov)[3] <- "Córdoba"
levels(tasa.paro.and.provincial$prov)[6] <- "Jaén"
levels(tasa.paro.and.provincial$prov)[7] <- "Málaga"
levels(tasa.paro.and.provincial$prov)
table(tasa.paro.and.provincial$prov)
# la función fortify -de ggplot2- permite pasar el objeto andalucia
# propio de la librería sp
# a data.frame que ya puede utilizar ggplot2
and.data.frame <- fortify(andalucia)
# Problema es que los datos los tenemos como dos primeros dígitos código postal
# y en mapa tenemos un código de 1 a 8
and.data.frame$id[and.data.frame$id == 1] <- "04"
and.data.frame$id[and.data.frame$id == 2] <- "11"
and.data.frame$id[and.data.frame$id == 3] <- "14"
and.data.frame$id[and.data.frame$id == 4] <- "18"
and.data.frame$id[and.data.frame$id == 5] <- "21"
and.data.frame$id[and.data.frame$id == 6] <- "23"
and.data.frame$id[and.data.frame$id == 7] <- "29"
and.data.frame$id[and.data.frame$id == 8] <- "41"
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat)
#######################################
# añadimos facetas -separamos por grupo de edad y nivel de formación
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)
#######################################
# cambiamos la escala de color para que más intenso sea más paro
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701")
#######################################
# Quitamos las coordenadas de x e y (longitud y latitud)
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701") +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL)
#######################################
# añadimos título, etiquetas de ejes y leyenda
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = paro),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3)  +
scale_fill_gradient(low = "#FDECDD",
high = "#D94701") +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold", size = rel(1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
# Mejoramos el mapa con etiquetas para los niveles
# para dar significado a los colores
# ver la capa "scale_fill_manual"
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov,
fill = intervalos),
map = and.data.frame,
colour = "black") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = c("#FDEBDD",
"#F9C9AD",
"#E1885F",
"#D34400"),
labels = c("Menos del 20%",
"[20% - 40%)",
"[40% - 60%)",
"[60% - 80%]")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
# Mapa con tasa de paro con alguna mejora
# - optimización de colores de líneas y fondo
# - incremento de categorías
# - uso de una escala divergente
cols <- brewer.pal(8,"PiYG")
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov, fill = intervalosfinos),
map = and.data.frame,
colour = "cadetblue1") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = rev(cols),
labels = c("<10",
"10-20",
"20-30",
"30-40",
"40-50",
"50-60",
"60-70",
"70-80")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
################
# POR QUÉ ES IMPORTANTE CONSIDERAR LA CEGUERA AL COLOR
# dichromat es una librería que incorpora funciones que cambian las distinciones de color azul-verde a aproximadamente los efectos de las dos formas más comunes de ceguera a color: protanopia y deuteranopia.
# Un ejemplo de heatmap.
library(dichromat)
par(mfcol=c(1, 2))
N <- 20
pie(rep(1, N),
col = heat.colors(N))
# Cómo lo vería una persona con deuteranopia:
pie(rep(1, N),
col = dichromat(heat.colors(N), type = "deutan"))
# Y con protanopia
pie(rep(1, N),
col = dichromat(heat.colors(N), type = "tritan"))
# Veamos la simulación de nuestro último mapa para una persona con deuteranopia
# (y aprovechamos para variar el color de las líneas de separación):
ggplot(tasa.paro.and.provincial) +
geom_map(aes(map_id = cod_prov, fill = intervalosfinos),
map = and.data.frame,
colour = "yellow") +
expand_limits(x = and.data.frame$long,
y = and.data.frame$lat) +
facet_grid(gedad ~ nforma3) +
scale_fill_manual(values = dichromat(rev(cols), type = "tritan"),
labels = c("<10",
"10-20",
"20-30",
"30-40",
"40-50",
"50-60",
"60-70",
"70-80")) +
scale_x_continuous(breaks = NULL) +
scale_y_continuous(breaks = NULL) +
theme(axis.text.y = element_blank(),
axis.text.x = element_blank(),
plot.title = element_text(face = "bold",
size = rel(1.4)),
legend.text = element_text(size = rel(1.1)),
strip.text = element_text(face = "bold",
size = rel(1.1))) +
labs(list(x = "", y = "", fill = "")) +
ggtitle("Tasa de paro\npor edad y estudios")
library(leaflet)
Markers
# Use markers to call out points on the map.
# Marker locations are expressed in
# latitude/longitude coordinates,
# and can either appear as icons or as circles.
40.4399710778972, -3.711730015993984
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=36.1848, lng=-5.49,
popup="Population explosion")
my_map
42.93959602742515, -4.656910378676613
42.93959602742515, -4.656910378676613
my_map <- leaflet() %>%
addTiles() %>%
addMarkers(lat=42.93959602742515, lng=-4.656910378676613,
popup="Population explosion")
my_map
# Mapas de España con Leaflet
lat_espania <- 40.416775
long_espania <- -3.703790
# https://www.antipodas.net/coordenadaspais/espana/andalucia.php
lat_andalucia <- 37.6000000
long_andalucia <- -4.5000000
# Mapa de España
m <- leaflet() %>%
setView(lat = lat_espania,
lng = long_espania,
zoom = 5)
m %>% addTiles()
# addProviderTiles()
m %>% addProviderTiles(providers$Stamen.Toner)
m %>% addProviderTiles(providers$CartoDB.Positron)
m %>% addProviderTiles(providers$Esri.NatGeoWorldMap)
# A partir de los polígonos que hemos manejado en script
# 05_mapas_paro.r
leaflet(data = espania) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL),
stroke = FALSE)
leaflet(data = andalucia) %>%
addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL),
stroke = FALSE)
# Choropleths in R + Leaflet
# Following
# https://rstudio.github.io/leaflet/choropleths.html
m <- leaflet(andalucia) %>%
setView(long_andalucia,
lat_andalucia,
8) %>%
addTiles()
m
#####
# El proceso de generación de la escala de color es un poco más manual
# Para limitar la complejidad del dibujo vamos a escoger solo el grupo de edad
# y rango de estudios más afectado por paro
tasa.paro.reducida <- tasa.paro.and.provincial[tasa.paro.and.provincial$gedad == "De 16 a 34 años" &
tasa.paro.and.provincial$nforma3 == "sin estudios y primaria", ]
tasa.paro.reducida$intervalos_num <-
as.numeric(tasa.paro.reducida$intervalosfinos) * -1
mybins <- c(seq(-1, -8, -1))
mybins
mypalette <- colorBin(palette = "PiYG",
domain = tasa.paro.reducida$intervalos_num,
bins = mybins)
m %>% addPolygons(fillColor = ~mypalette(tasa.paro.reducida$intervalos_num),
stroke = TRUE,
fillOpacity = 1)
###
# con otro proveedor de "Tiles"
m <- leaflet(andalucia) %>%
setView(long_andalucia,
lat_andalucia,
8) %>%
addProviderTiles(providers$Stamen.Toner)
m
m %>% addPolygons(fillColor = ~mypalette(tasa.paro.reducida$intervalos_num),
stroke = TRUE,
fillOpacity = .5)
# Añadimos "tooltips"
# Prepare the text for tooltips:
mytext <- paste(
"Provincia: ", tasa.paro.reducida$prov,"<br/>",
sep="") %>%
lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~mypalette(tasa.paro.reducida$intervalos_num),
stroke = TRUE,
fillOpacity = .5,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
))
# Include additional text for tooltips:
mytext <- paste(
"Provincia: ", tasa.paro.reducida$prov,"<br/>",
"Tasa de Paro (menores de 35, sin estudios): ",
paste(round(tasa.paro.reducida$paro, 2) * 100, "%"),"<br/>",
sep="") %>%
lapply(htmltools::HTML)
m %>% addPolygons(fillColor = ~mypalette(tasa.paro.reducida$intervalos_num),
stroke = TRUE,
fillOpacity = .7,
label = mytext,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
))
shiny::runApp('ejemplo_shiny_COVID')
